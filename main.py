# ============================================================================
# TELEGRAM MONITOR BOT - –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –≥—Ä—É–ø –∑ –ø–µ—Ä–µ—Å–∏–ª–∞–Ω–Ω—è–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
# ============================================================================
# –¶–µ–π —Å–∫—Ä–∏–ø—Ç –ø—ñ–¥–∫–ª—é—á–∞—î—Ç—å—Å—è –¥–æ –≤–∞—à–æ–≥–æ Telegram –∞–∫–∞—É–Ω—Ç—É —Ç–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏—Ç—å –≤—Å—ñ –≥—Ä—É–ø–∏/–∫–∞–Ω–∞–ª–∏
# –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤, –ø—ñ—Å–ª—è —á–æ–≥–æ –ø–µ—Ä–µ—Å–∏–ª–∞—î –∑–Ω–∞–π–¥–µ–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤–∞–º

import asyncio
import logging
from telethon import TelegramClient, events
from telethon.tl.types import PeerChannel, PeerChat, PeerUser
import json
import os

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ –ª–æ–≥—É–≤–∞–Ω–Ω—è (–¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ä–æ–±–æ—Ç—É —Å–∫—Ä–∏–ø—Ç–∞)
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)


class TelegramMonitor:
    """
    ü§ñ –û—Å–Ω–æ–≤–Ω–∏–π –∫–ª–∞—Å –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É Telegram –≥—Ä—É–ø

    –¶–µ–π –∫–ª–∞—Å –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞:
    - –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Telegram API
    - –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤ –∑ —Ñ–∞–π–ª—É
    - –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É –≤—Å—ñ—Ö –≥—Ä—É–ø–∞—Ö/–∫–∞–Ω–∞–ª–∞—Ö
    - –ü–µ—Ä–µ—Å–∏–ª–∞–Ω–Ω—è –∑–Ω–∞–π–¥–µ–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    """

    def __init__(self, api_id, api_hash, phone_number, target_user_id, keywords_file='keywords.json'):
        """
        üîß –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram –º–æ–Ω—ñ—Ç–æ—Ä–∞

        Args:
            api_id: API ID –∑ my.telegram.org (—á–∏—Å–ª–æ)
            api_hash: API Hash –∑ my.telegram.org (—Ä—è–¥–æ–∫)
            phone_number: –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó (—Ñ–æ—Ä–º–∞—Ç: +380XXXXXXXXX)
            target_user_id: ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫–æ–º—É –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (—á–∏—Å–ª–æ)
            keywords_file: –§–∞–π–ª –∑ –∫–ª—é—á–æ–≤–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: keywords.json)
        """
        # üíæ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
        self.api_id = api_id
        self.api_hash = api_hash
        self.phone_number = phone_number
        self.target_user_id = target_user_id
        self.keywords_file = keywords_file

        # üìù –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤ –∑ —Ñ–∞–π–ª—É keywords.json
        self.keywords = self.load_keywords()

        # üîó –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Telegram –∫–ª—ñ—î–Ω—Ç–∞
        # 'session_name' - —Ñ–∞–π–ª –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–µ—Å—ñ—ó (—â–æ–± –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—è —â–æ—Ä–∞–∑—É)
        self.client = TelegramClient('session_name', api_id, api_hash)

    def load_keywords(self):
        """
        üìÇ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤ –∑ —Ñ–∞–π–ª—É keywords.json

        –Ø–∫—â–æ —Ñ–∞–π–ª –Ω–µ —ñ—Å–Ω—É—î - —Å—Ç–≤–æ—Ä—é—î –π–æ–≥–æ –∑ –ø—Ä–∏–∫–ª–∞–¥–∞–º–∏ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤
        –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤ —É –Ω–∏–∂–Ω—å–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ –¥–ª—è –ø–æ—à—É–∫—É
        """
        try:
            if os.path.exists(self.keywords_file):
                # üìñ –ß–∏—Ç–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ —Ñ–∞–π–ª—É –∑ –∫–ª—é—á–æ–≤–∏–º–∏ —Å–ª–æ–≤–∞–º–∏
                with open(self.keywords_file, 'r', encoding='utf-8') as f:
                    data = json.load(f)
                    return [keyword.lower() for keyword in data.get('keywords', [])]
            else:
                # üìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ–∞–π–ª—É –∑ –ø—Ä–∏–∫–ª–∞–¥–∞–º–∏ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤ (—è–∫—â–æ —Ñ–∞–π–ª –Ω–µ —ñ—Å–Ω—É—î)
                default_keywords = {
                    "keywords": [
                        "–≤–∞–∂–ª–∏–≤–æ",  # –ü—Ä–∏–∫–ª–∞–¥–∏ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤
                        "—Ç–µ—Ä–º—ñ–Ω–æ–≤–æ",  # –í–∏ –º–æ–∂–µ—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ —ó—Ö —É —Ñ–∞–π–ª—ñ keywords.json
                        "—Ä–æ–±–æ—Ç–∞",  # –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ –∑–∞–ø—É—Å–∫—É
                        "–ø—Ä–æ–µ–∫—Ç",
                        "–∑—É—Å—Ç—Ä—ñ—á",
                        "–¥–µ–¥–ª–∞–π–Ω"
                    ]
                }
                with open(self.keywords_file, 'w', encoding='utf-8') as f:
                    json.dump(default_keywords, f, ensure_ascii=False, indent=2)
                logger.info(f"üìù –°—Ç–≤–æ—Ä–µ–Ω–æ —Ñ–∞–π–ª {self.keywords_file} –∑ –ø—Ä–∏–∫–ª–∞–¥–∞–º–∏ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤")
                return [keyword.lower() for keyword in default_keywords['keywords']]
        except Exception as e:
            logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤: {e}")
            return []

    def check_keywords(self, message_text):
        """
        üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤ —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ

        Args:
            message_text: –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏

        Returns:
            list: –°–ø–∏—Å–æ–∫ –∑–Ω–∞–π–¥–µ–Ω–∏—Ö –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤ –∞–±–æ –ø–æ—Ä–æ–∂–Ω—ñ–π —Å–ø–∏—Å–æ–∫
        """
        if not message_text:
            return []

        # üî§ –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –≤ –Ω–∏–∂–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä –¥–ª—è –ø–æ—à—É–∫—É
        message_lower = message_text.lower()
        found_keywords = []

        # üîé –ü–æ—à—É–∫ –∫–æ–∂–Ω–æ–≥–æ –∫–ª—é—á–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞ –≤ —Ç–µ–∫—Å—Ç—ñ
        for keyword in self.keywords:
            if keyword in message_lower:
                found_keywords.append(keyword)

        return found_keywords

    async def start(self):
        """
        üöÄ –ó–∞–ø—É—Å–∫ –∫–ª—ñ—î–Ω—Ç–∞ —Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –≤ Telegram

        –¶–µ–π –º–µ—Ç–æ–¥:
        1. –ê–≤—Ç–æ—Ä–∏–∑—É—î—Ç—å—Å—è —É Telegram (–º–æ–∂–µ –∑–∞–ø–∏—Ç–∞—Ç–∏ SMS –∫–æ–¥)
        2. –û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –≥—Ä—É–ø/–∫–∞–Ω–∞–ª—ñ–≤
        3. –ó–∞–ø—É—Å–∫–∞—î –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        4. –ü—Ä–∞—Ü—é—î –¥–æ –∑—É–ø–∏–Ω–∫–∏ (Ctrl+C)
        """
        try:
            # üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –≤ Telegram (–º–æ–∂–µ –∑–∞–ø–∏—Ç–∞—Ç–∏ SMS –∫–æ–¥ –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–ø—É—Å–∫—É)
            await self.client.start(phone=self.phone_number)
            logger.info("‚úÖ –£—Å–ø—ñ—à–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –≤ Telegram")

            # üë§ –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            me = await self.client.get_me()
            logger.info(f"üë§ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ —è–∫: {me.first_name} {me.last_name or ''} (@{me.username or '–±–µ–∑ username'})")

            # üìã –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤—Å—ñ—Ö –≥—Ä—É–ø —Ç–∞ –∫–∞–Ω–∞–ª—ñ–≤ –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
            await self.get_all_chats()

            # üëÇ –ó–∞–ø—É—Å–∫ –æ–±—Ä–æ–±–Ω–∏–∫–∞ –Ω–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
            self.setup_message_handler()

            logger.info("üéØ –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Ä–æ–∑–ø–æ—á–∞—Ç–æ. –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å...")
            logger.info("‚èπÔ∏è  –î–ª—è –∑—É–ø–∏–Ω–∫–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C")

            # üîÑ –ë–µ–∑–∫—ñ–Ω–µ—á–Ω–∏–π —Ü–∏–∫–ª –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
            await self.client.run_until_disconnected()

        except Exception as e:
            logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É: {e}")

    async def get_all_chats(self):
        """
        üìã –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤—Å—ñ—Ö –≥—Ä—É–ø —Ç–∞ –∫–∞–Ω–∞–ª—ñ–≤ –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É

        –ü–æ–∫–∞–∑—É—î –≤—Å—ñ –≥—Ä—É–ø–∏/–∫–∞–Ω–∞–ª–∏, –¥–µ –≤–∏ —î —É—á–∞—Å–Ω–∏–∫–æ–º
        –°–∫—Ä–∏–ø—Ç –±—É–¥–µ –º–æ–Ω—ñ—Ç–æ—Ä–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç—ñ–ª—å–∫–∏ –≤ —Ü–∏—Ö —á–∞—Ç–∞—Ö
        """
        try:
            # üìû –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –¥—ñ–∞–ª–æ–≥—ñ–≤ (—á–∞—Ç—ñ–≤) –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            dialogs = await self.client.get_dialogs()
            groups = []

            # üîç –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Ç—ñ–ª—å–∫–∏ –≥—Ä—É–ø —Ç–∞ –∫–∞–Ω–∞–ª—ñ–≤ (–ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø—Ä–∏–≤–∞—Ç–Ω—ñ —á–∞—Ç–∏)
            for dialog in dialogs:
                if dialog.is_group or dialog.is_channel:
                    groups.append({
                        'id': dialog.id,
                        'title': dialog.title,
                        'type': '–∫–∞–Ω–∞–ª' if dialog.is_channel else '–≥—Ä—É–ø–∞'
                    })

            # üìä –í–∏–≤–µ–¥–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–Ω–∞–π–¥–µ–Ω–∏—Ö –≥—Ä—É–ø/–∫–∞–Ω–∞–ª—ñ–≤
            logger.info(f"üìä –ó–Ω–∞–π–¥–µ–Ω–æ {len(groups)} –≥—Ä—É–ø/–∫–∞–Ω–∞–ª—ñ–≤ –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É:")
            for group in groups:
                logger.info(f"  üìå {group['title']} ({group['type']}) [ID: {group['id']}]")

        except Exception as e:
            logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —á–∞—Ç—ñ–≤: {e}")

    def setup_message_handler(self):
        """
        üëÇ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –Ω–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å

        –¶–µ–π –º–µ—Ç–æ–¥ —Å—Ç–≤–æ—Ä—é—î "—Å–ª—É—Ö–∞—á–∞", —è–∫–∏–π —Ä–µ–∞–≥—É—î –Ω–∞ –∫–æ–∂–Ω–µ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        —É –≤—Å—ñ—Ö –≥—Ä—É–ø–∞—Ö/–∫–∞–Ω–∞–ª–∞—Ö —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î —ó—Ö –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤
        """

        @self.client.on(events.NewMessage)  # üéØ –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –Ω–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        async def message_handler(event):
            try:
                # üö´ –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –≤–ª–∞—Å–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (—â–æ–± –Ω–µ —Å–ø–∞–º–∏—Ç–∏ —Å–æ–±—ñ)
                if event.is_private and event.sender_id == (await self.client.get_me()).id:
                    return

                # üìù –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —á–∞—Ç —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞
                chat = await event.get_chat()
                sender = await event.get_sender()

                # üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ü–µ –≥—Ä—É–ø–∞ –∞–±–æ –∫–∞–Ω–∞–ª (–ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø—Ä–∏–≤–∞—Ç–Ω—ñ —á–∞—Ç–∏)
                if not (hasattr(chat, 'megagroup') or hasattr(chat, 'broadcast') or
                        hasattr(chat, 'title')):
                    return

                # üìÑ –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                message_text = event.message.message
                if not message_text:
                    return  # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–µ–∑ —Ç–µ–∫—Å—Ç—É (—Ñ–æ—Ç–æ, —Å—Ç—ñ–∫–µ—Ä–∏ —Ç–æ—â–æ)

                # üîé –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤ —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ
                found_keywords = self.check_keywords(message_text)

                # üì§ –Ø–∫—â–æ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ - –ø–µ—Ä–µ—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                if found_keywords:
                    await self.forward_message(event, chat, sender, found_keywords)

            except Exception as e:
                logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

    async def forward_message(self, event, chat, sender, keywords):
        """
        üì§ –ü–µ—Ä–µ—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª—é—á–æ–≤–∏–º–∏ —Å–ª–æ–≤–∞–º–∏

        –§–æ—Ä–º—É—î –¥–µ—Ç–∞–ª—å–Ω–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—î –π–æ–≥–æ —Ü—ñ–ª—å–æ–≤–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
        –í–∫–ª—é—á–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –¥–∂–µ—Ä–µ–ª–æ, –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞ —Ç–∞ –∑–Ω–∞–π–¥–µ–Ω—ñ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞
        """
        try:
            # üìù –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            chat_name = getattr(chat, 'title', '–ù–µ–≤—ñ–¥–æ–º–∏–π —á–∞—Ç')
            sender_name = f"{getattr(sender, 'first_name', '')} {getattr(sender, 'last_name', '') or ''}".strip()
            sender_username = getattr(sender, 'username', '')

            # üë§ –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞
            if sender_username:
                sender_info = f"{sender_name} (@{sender_username})"
            else:
                sender_info = sender_name or "–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á"

            # üìã –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
            notification_text = f"""
üîî –ó–ù–ê–ô–î–ï–ù–û –ö–õ–Æ–ß–û–í–Ü –°–õ–û–í–ê: {', '.join(keywords)}

üìç –ì—Ä—É–ø–∞/–ö–∞–Ω–∞–ª: {chat_name}
üë§ –í—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫: {sender_info}
üìÖ –ß–∞—Å: {event.message.date.strftime('%Y-%m-%d %H:%M:%S')}

üí¨ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:
{event.message.message}

---
ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {event.message.id}
ID —á–∞—Ç—É: {chat.id}
            """.strip()

            # üì® –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —Ü—ñ–ª—å–æ–≤–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            await self.client.send_message(self.target_user_id, notification_text)

            logger.info(f"‚úÖ –ü–µ—Ä–µ—Å–ª–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–ª—é—á–æ–≤–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ {keywords} –∑ —á–∞—Ç—É '{chat_name}'")

        except Exception as e:
            logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")


async def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    # ========================================================================
    # üîß –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø - –û–ë–û–í'–Ø–ó–ö–û–í–û –ó–ê–ú–Ü–ù–Ü–¢–¨ –ù–ê –°–í–û–á –î–ê–ù–Ü!
    # ========================================================================

    # 1Ô∏è‚É£ API_ID —Ç–∞ API_HASH - –æ—Ç—Ä–∏–º–∞–π—Ç–µ –Ω–∞ https://my.telegram.org
    # –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è:
    # - –ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ https://my.telegram.org
    # - –£–≤—ñ–π–¥—ñ—Ç—å —É —Å–≤—ñ–π Telegram –∞–∫–∞—É–Ω—Ç
    # - –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "API development tools"
    # - –°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤—É –∞–ø–ª—ñ–∫–∞—Ü—ñ—é (–Ω–∞–∑–≤–∞ –º–æ–∂–µ –±—É—Ç–∏ –±—É–¥—å-—è–∫–æ—é)
    # - –°–∫–æ–ø—ñ—é–π—Ç–µ api_id (—á–∏—Å–ª–æ) —Ç–∞ api_hash (—Ä—è–¥–æ–∫)
    API_ID = 21851272  # ‚úÖ –í–∞—à API ID (—á–∏—Å–ª–æ)
    API_HASH = '8278e92db1f324db822ed1e7a1d5a9ec'  # ‚úÖ –í–∞—à API Hash (—Ä—è–¥–æ–∫ —É –ª–∞–ø–∫–∞—Ö)

    # 2Ô∏è‚É£ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É - –≤–∞—à –Ω–æ–º–µ—Ä, –ø—Ä–∏–≤'—è–∑–∞–Ω–∏–π –¥–æ Telegram –∞–∫–∞—É–Ω—Ç—É
    # –§–æ—Ä–º–∞—Ç: +380XXXXXXXXX (–∑ –∫–æ–¥–æ–º –∫—Ä–∞—ó–Ω–∏)
    PHONE_NUMBER = '+33652536163'  # ‚úÖ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É

    # 3Ô∏è‚É£ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å
    # –Ø–∫ –æ—Ç—Ä–∏–º–∞—Ç–∏:
    # - –ù–∞–ø–∏—à—ñ—Ç—å –±–æ—Ç—É @userinfobot –≤ Telegram
    # - –í—ñ–Ω –Ω–∞–¥—ñ—à–ª–µ –≤–∞–º –≤–∞—à User ID (—á–∏—Å–ª–æ)
    # - –ê–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ @getmyid_bot
    TARGET_USER_ID = 927144138  # ‚úÖ –í–∞—à User ID (—á–∏—Å–ª–æ)

    # ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    if not API_ID or not API_HASH:
        print("‚ùå –ü–û–ú–ò–õ–ö–ê: –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ API_ID —Ç–∞ API_HASH")
        print("üìù –û—Ç—Ä–∏–º–∞–π—Ç–µ —ó—Ö –Ω–∞ https://my.telegram.org")
        return

    if not PHONE_NUMBER or PHONE_NUMBER == '+380XXXXXXXXX':
        print("‚ùå –ü–û–ú–ò–õ–ö–ê: –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É")
        return

    if not TARGET_USER_ID:
        print("‚ùå –ü–û–ú–ò–õ–ö–ê: –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ ID —Ü—ñ–ª—å–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
        print("üìù –û—Ç—Ä–∏–º–∞–π—Ç–µ –π–æ–≥–æ —á–µ—Ä–µ–∑ @userinfobot –≤ Telegram")
        return

    print("‚úÖ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
    print(f"üì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {PHONE_NUMBER}")
    print(f"üÜî User ID: {TARGET_USER_ID}")
    print(f"üîë API ID: {API_ID}")

    # üöÄ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –∑–∞–ø—É—Å–∫ –º–æ–Ω—ñ—Ç–æ—Ä–∞ –∑ –≤–∞—à–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏
    monitor = TelegramMonitor(
        api_id=API_ID,
        api_hash=API_HASH,
        phone_number=PHONE_NUMBER,
        target_user_id=TARGET_USER_ID
    )

    # üéØ –ó–∞–ø—É—Å–∫ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
    await monitor.start()


# ============================================================================
# üéØ –¢–û–ß–ö–ê –í–•–û–î–£ - –¢–£–¢ –ü–û–ß–ò–ù–ê–Ñ–¢–¨–°–Ø –í–ò–ö–û–ù–ê–ù–ù–Ø –ü–†–û–ì–†–ê–ú–ò
# ============================================================================
if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram Monitor...")
    print("üìã –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –≤–∏ –≤–∫–∞–∑–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —É –∫–æ–¥—ñ")
    print("üîë –ö–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—é—Ç—å—Å—è –∑ —Ñ–∞–π–ª—É keywords.json")
    print("üì± –ü—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–ø—É—Å–∫—É –º–æ–∂–µ –∑–∞–ø–∏—Ç–∞—Ç–∏ SMS –∫–æ–¥")
    print("‚èπÔ∏è  –î–ª—è –∑—É–ø–∏–Ω–∫–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C")
    print("-" * 50)

    try:
        # üèÉ –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—ó –≥–æ–ª–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
        print("üí° –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —Ç–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É")